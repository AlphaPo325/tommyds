--- binary-search-tesseract-1.0.c.ori	2014-07-08 18:31:51.920031425 +0200
+++ binary-search-tesseract-1.0.c	2014-07-08 18:33:08.938297427 +0200
@@ -61,7 +61,7 @@
 struct z_node
 {
 	int key;
-	char *val;
+	void* val;
 };
 
 struct z_node *find_key(struct cube *cube, int key, short *w_index, short *x_index, short *y_index, short *z_index);
@@ -75,7 +75,7 @@
 void split_y_node(struct cube *cube, short w_index, short x_index, short y_index);
 void merge_y_node(struct cube *cube, short w_index, short x_index, short y_index1, short y_index2);
 
-void insert_z_node(struct cube *cube, short w_index, short x_index, short y_index, short z_index, int key, char *val);
+void insert_z_node(struct cube *cube, short w_index, short x_index, short y_index, short z_index, int key, void *val);
 void remove_z_node(struct cube *cube, short w_index, short x_index, short y_index, short z_index);
 
 void deflate_cube(struct cube *cube);
@@ -212,7 +212,7 @@
 	return NULL;
 }
 
-void set_key(struct cube *cube, int key, char *val)
+void set_key(struct cube *cube, int key, void *val)
 {
 	struct z_node *z_node;
 	short w_index, x_index, y_index, z_index;
@@ -221,8 +221,7 @@
 
 	if (z_node)
 	{
-		free(z_node->val);
-		z_node->val = strdup(val);
+		z_node->val = val;
 	}
 	else
 	{
@@ -295,10 +294,6 @@
 				{
 					y_node = x_node->y_axis[y];
 				
-					for (z = y_node->z_size - 1 ; z >= 0 ; z--)
-					{
-						free(y_node->z_axis[z].val);
-					}
 					free(y_node->z_axis);
 					free(y_node);
 				}
@@ -596,7 +591,7 @@
 	}
 }
 
-void insert_z_node(struct cube *cube, short w_index, short x_index, short y_index, short z_index, int key, char *val)
+void insert_z_node(struct cube *cube, short w_index, short x_index, short y_index, short z_index, int key, void *val)
 {
 	struct w_node *w_node;
 	struct x_node *x_node;
@@ -645,7 +640,7 @@
 	z_node = &y_node->z_axis[z_index];
 
 	z_node->key = key;
-	z_node->val = strdup(val);
+	z_node->val = val;
 
 	if (z_index == 0)
 	{
@@ -696,8 +691,6 @@
 
 	y_node->z_size--;
 
-	free(y_node->z_axis[z_index].val);
-
 	if (y_node->z_size != z_index)
 	{
 		memmove(&y_node->z_axis[z_index], &y_node->z_axis[z_index + 1], (y_node->z_size - z_index) * sizeof(struct z_node));
@@ -930,7 +923,7 @@
 	merge_w_node(cube, d_index, d_index + 1);
 }
 
-
+#if 0
 void show_cube(struct cube *cube, short depth)
 {
 	struct w_node *w_node;
@@ -1051,3 +1044,5 @@
 
 	return 0;
 }
+#endif
+
